// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: builtin_interfaces.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace BuiltinInterfaces {

  /// <summary>Holder for reflection information generated from builtin_interfaces.proto</summary>
  public static partial class BuiltinInterfacesReflection {

    #region Descriptor
    /// <summary>File descriptor for builtin_interfaces.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BuiltinInterfacesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChhidWlsdGluX2ludGVyZmFjZXMucHJvdG8SEmJ1aWx0aW5faW50ZXJmYWNl",
            "cyIoCghEdXJhdGlvbhILCgNzZWMYASABKAUSDwoHbmFub3NlYxgCIAEoDSIk",
            "CgRUaW1lEgsKA3NlYxgBIAEoBRIPCgduYW5vc2VjGAIgASgNYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::BuiltinInterfaces.Duration), global::BuiltinInterfaces.Duration.Parser, new[]{ "Sec", "Nanosec" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BuiltinInterfaces.Time), global::BuiltinInterfaces.Time.Parser, new[]{ "Sec", "Nanosec" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///*
  /// Protobuf definition of builtin_interface/msg/Duration type in ROS 2.
  /// </summary>
  public sealed partial class Duration : pb::IMessage<Duration> {
    private static readonly pb::MessageParser<Duration> _parser = new pb::MessageParser<Duration>(() => new Duration());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Duration> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BuiltinInterfaces.BuiltinInterfacesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Duration() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Duration(Duration other) : this() {
      sec_ = other.sec_;
      nanosec_ = other.nanosec_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Duration Clone() {
      return new Duration(this);
    }

    /// <summary>Field number for the "sec" field.</summary>
    public const int SecFieldNumber = 1;
    private int sec_;
    /// <summary>
    /// The seconds component, valid over all int32 values.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Sec {
      get { return sec_; }
      set {
        sec_ = value;
      }
    }

    /// <summary>Field number for the "nanosec" field.</summary>
    public const int NanosecFieldNumber = 2;
    private uint nanosec_;
    /// <summary>
    /// The nanoseconds component, valid in the range [0, 10e9).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Nanosec {
      get { return nanosec_; }
      set {
        nanosec_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Duration);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Duration other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Sec != other.Sec) return false;
      if (Nanosec != other.Nanosec) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Sec != 0) hash ^= Sec.GetHashCode();
      if (Nanosec != 0) hash ^= Nanosec.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Sec != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Sec);
      }
      if (Nanosec != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Nanosec);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Sec != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Sec);
      }
      if (Nanosec != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Nanosec);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Duration other) {
      if (other == null) {
        return;
      }
      if (other.Sec != 0) {
        Sec = other.Sec;
      }
      if (other.Nanosec != 0) {
        Nanosec = other.Nanosec;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Sec = input.ReadInt32();
            break;
          }
          case 16: {
            Nanosec = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///*
  /// Protobuf definition of builtin_interface/msg/Time type in ROS 2.
  /// </summary>
  public sealed partial class Time : pb::IMessage<Time> {
    private static readonly pb::MessageParser<Time> _parser = new pb::MessageParser<Time>(() => new Time());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Time> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BuiltinInterfaces.BuiltinInterfacesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Time() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Time(Time other) : this() {
      sec_ = other.sec_;
      nanosec_ = other.nanosec_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Time Clone() {
      return new Time(this);
    }

    /// <summary>Field number for the "sec" field.</summary>
    public const int SecFieldNumber = 1;
    private int sec_;
    /// <summary>
    /// The seconds component, valid over all int32 values.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Sec {
      get { return sec_; }
      set {
        sec_ = value;
      }
    }

    /// <summary>Field number for the "nanosec" field.</summary>
    public const int NanosecFieldNumber = 2;
    private uint nanosec_;
    /// <summary>
    /// The nanoseconds component, valid in the range [0, 10e9).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Nanosec {
      get { return nanosec_; }
      set {
        nanosec_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Time);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Time other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Sec != other.Sec) return false;
      if (Nanosec != other.Nanosec) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Sec != 0) hash ^= Sec.GetHashCode();
      if (Nanosec != 0) hash ^= Nanosec.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Sec != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Sec);
      }
      if (Nanosec != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Nanosec);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Sec != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Sec);
      }
      if (Nanosec != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Nanosec);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Time other) {
      if (other == null) {
        return;
      }
      if (other.Sec != 0) {
        Sec = other.Sec;
      }
      if (other.Nanosec != 0) {
        Nanosec = other.Nanosec;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Sec = input.ReadInt32();
            break;
          }
          case 16: {
            Nanosec = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
