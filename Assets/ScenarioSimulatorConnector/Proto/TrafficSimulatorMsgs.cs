// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: traffic_simulator_msgs.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace TrafficSimulatorMsgs {

  /// <summary>Holder for reflection information generated from traffic_simulator_msgs.proto</summary>
  public static partial class TrafficSimulatorMsgsReflection {

    #region Descriptor
    /// <summary>File descriptor for traffic_simulator_msgs.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TrafficSimulatorMsgsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chx0cmFmZmljX3NpbXVsYXRvcl9tc2dzLnByb3RvEhZ0cmFmZmljX3NpbXVs",
            "YXRvcl9tc2dzGiBhdXRvd2FyZV9hdXRvX2NvbnRyb2xfbXNncy5wcm90bxog",
            "YXV0b3dhcmVfYXV0b192ZWhpY2xlX21zZ3MucHJvdG8aE2dlb21ldHJ5X21z",
            "Z3MucHJvdG8ihQEKDEFjdGlvblN0YXR1cxIWCg5jdXJyZW50X2FjdGlvbhgB",
            "IAEoCRIjCgV0d2lzdBgCIAEoCzIULmdlb21ldHJ5X21zZ3MuVHdpc3QSIwoF",
            "YWNjZWwYAyABKAsyFC5nZW9tZXRyeV9tc2dzLkFjY2VsEhMKC2xpbmVhcl9q",
            "ZXJrGAQgASgBIl8KC0JvdW5kaW5nQm94EiQKBmNlbnRlchgBIAEoCzIULmdl",
            "b21ldHJ5X21zZ3MuUG9pbnQSKgoKZGltZW5zaW9ucxgCIAEoCzIWLmdlb21l",
            "dHJ5X21zZ3MuVmVjdG9yMyJhCgtMYW5lbGV0UG9zZRISCgpsYW5lbGV0X2lk",
            "GAEgASgDEgkKAXMYAiABKAESDgoGb2Zmc2V0GAMgASgBEiMKA3JweRgEIAEo",
            "CzIWLmdlb21ldHJ5X21zZ3MuVmVjdG9yMyKCAQoKRW50aXR5VHlwZRI1CgR0",
            "eXBlGAEgASgOMicudHJhZmZpY19zaW11bGF0b3JfbXNncy5FbnRpdHlUeXBl",
            "LkVudW0iPQoERW51bRIHCgNFR08QABILCgdWRUhJQ0xFEAESDgoKUEVERVNU",
            "UklBThACEg8KC01JU0NfT0JKRUNUEAMitgEKDUVudGl0eVN1YnR5cGUSOQoF",
            "dmFsdWUYASABKA4yKi50cmFmZmljX3NpbXVsYXRvcl9tc2dzLkVudGl0eVN1",
            "YnR5cGUuRW51bSJqCgRFbnVtEgsKB1VOS05PV04QABIHCgNDQVIQARIJCgVU",
            "UlVDSxACEgcKA0JVUxADEgsKB1RSQUlMRVIQBBIOCgpNT1RPUkNZQ0xFEAUS",
            "CwoHQklDWUNMRRAGEg4KClBFREVTVFJJQU4QByKGAwoMRW50aXR5U3RhdHVz",
            "EjAKBHR5cGUYASABKAsyIi50cmFmZmljX3NpbXVsYXRvcl9tc2dzLkVudGl0",
            "eVR5cGUSNgoHc3VidHlwZRgCIAEoCzIlLnRyYWZmaWNfc2ltdWxhdG9yX21z",
            "Z3MuRW50aXR5U3VidHlwZRIMCgR0aW1lGAMgASgBEgwKBG5hbWUYBCABKAkS",
            "OQoMYm91bmRpbmdfYm94GAUgASgLMiMudHJhZmZpY19zaW11bGF0b3JfbXNn",
            "cy5Cb3VuZGluZ0JveBI7Cg1hY3Rpb25fc3RhdHVzGAYgASgLMiQudHJhZmZp",
            "Y19zaW11bGF0b3JfbXNncy5BY3Rpb25TdGF0dXMSIQoEcG9zZRgHIAEoCzIT",
            "Lmdlb21ldHJ5X21zZ3MuUG9zZRI5CgxsYW5lbGV0X3Bvc2UYCCABKAsyIy50",
            "cmFmZmljX3NpbXVsYXRvcl9tc2dzLkxhbmVsZXRQb3NlEhoKEmxhbmVsZXRf",
            "cG9zZV92YWxpZBgJIAEoCCKSAQoLUGVyZm9ybWFuY2USEQoJbWF4X3NwZWVk",
            "GAEgASgBEhgKEG1heF9hY2NlbGVyYXRpb24YAiABKAESHQoVbWF4X2FjY2Vs",
            "ZXJhdGlvbl9yYXRlGAMgASgBEhgKEG1heF9kZWNlbGVyYXRpb24YBCABKAES",
            "HQoVbWF4X2RlY2VsZXJhdGlvbl9yYXRlGAUgASgBInEKBEF4bGUSFAoMbWF4",
            "X3N0ZWVyaW5nGAEgASgBEhYKDndoZWVsX2RpYW1ldGVyGAIgASgBEhMKC3Ry",
            "YWNrX3dpZHRoGAMgASgBEhIKCnBvc2l0aW9uX3gYBCABKAESEgoKcG9zaXRp",
            "b25fehgFIAEoASJqCgVBeGxlcxIwCgpmcm9udF9heGxlGAEgASgLMhwudHJh",
            "ZmZpY19zaW11bGF0b3JfbXNncy5BeGxlEi8KCXJlYXJfYXhsZRgCIAEoCzIc",
            "LnRyYWZmaWNfc2ltdWxhdG9yX21zZ3MuQXhsZSIKCghQcm9wZXJ0eSL4AQoR",
            "VmVoaWNsZVBhcmFtZXRlcnMSDAoEbmFtZRgBIAEoCRI4CgtwZXJmb3JtYW5j",
            "ZRgCIAEoCzIjLnRyYWZmaWNfc2ltdWxhdG9yX21zZ3MuUGVyZm9ybWFuY2US",
            "OQoMYm91bmRpbmdfYm94GAMgASgLMiMudHJhZmZpY19zaW11bGF0b3JfbXNn",
            "cy5Cb3VuZGluZ0JveBIsCgVheGxlcxgEIAEoCzIdLnRyYWZmaWNfc2ltdWxh",
            "dG9yX21zZ3MuQXhsZXMSMgoIcHJvcGVydHkYBSABKAsyIC50cmFmZmljX3Np",
            "bXVsYXRvcl9tc2dzLlByb3BlcnR5Il8KFFBlZGVzdHJpYW5QYXJhbWV0ZXJz",
            "EgwKBG5hbWUYASABKAkSOQoMYm91bmRpbmdfYm94GAIgASgLMiMudHJhZmZp",
            "Y19zaW11bGF0b3JfbXNncy5Cb3VuZGluZ0JveCJfChRNaXNjT2JqZWN0UGFy",
            "YW1ldGVycxIMCgRuYW1lGAEgASgJEjkKDGJvdW5kaW5nX2JveBgCIAEoCzIj",
            "LnRyYWZmaWNfc2ltdWxhdG9yX21zZ3MuQm91bmRpbmdCb3giNAoJV2F5cG9p",
            "bnRzEicKCXdheXBvaW50cxgBIAMoCzIULmdlb21ldHJ5X21zZ3MuUG9pbnQi",
            "pwEKDlZlaGljbGVDb21tYW5kElYKGWFja2VybWFubl9jb250cm9sX2NvbW1h",
            "bmQYASABKAsyMy5hdXRvd2FyZV9hdXRvX2NvbnRyb2xfbXNncy5BY2tlcm1h",
            "bm5Db250cm9sQ29tbWFuZBI9CgxnZWFyX2NvbW1hbmQYAiABKAsyJy5hdXRv",
            "d2FyZV9hdXRvX3ZlaGljbGVfbXNncy5HZWFyQ29tbWFuZCI9CgZWZXJ0ZXgS",
            "DAoEdGltZRgBIAEoARIlCghwb3NpdGlvbhgCIAEoCzITLmdlb21ldHJ5X21z",
            "Z3MuUG9zZSI8CghQb2x5bGluZRIwCgh2ZXJ0aWNlcxgBIAMoCzIeLnRyYWZm",
            "aWNfc2ltdWxhdG9yX21zZ3MuVmVydGV4IrABChJQb2x5bGluZVRyYWplY3Rv",
            "cnkSHwoXaW5pdGlhbF9kaXN0YW5jZV9vZmZzZXQYASABKAESJQodZHluYW1p",
            "Y19jb25zdHJhaW50c19pZ25vcmFibGUYAiABKAgSEQoJYmFzZV90aW1lGAMg",
            "ASgBEg4KBmNsb3NlZBgEIAEoCBIvCgVzaGFwZRgFIAEoCzIgLnRyYWZmaWNf",
            "c2ltdWxhdG9yX21zZ3MuUG9seWxpbmViBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::AutowareAutoControlMsgs.AutowareAutoControlMsgsReflection.Descriptor, global::AutowareAutoVehicleMsgs.AutowareAutoVehicleMsgsReflection.Descriptor, global::GeometryMsgs.GeometryMsgsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::TrafficSimulatorMsgs.ActionStatus), global::TrafficSimulatorMsgs.ActionStatus.Parser, new[]{ "CurrentAction", "Twist", "Accel", "LinearJerk" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TrafficSimulatorMsgs.BoundingBox), global::TrafficSimulatorMsgs.BoundingBox.Parser, new[]{ "Center", "Dimensions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TrafficSimulatorMsgs.LaneletPose), global::TrafficSimulatorMsgs.LaneletPose.Parser, new[]{ "LaneletId", "S", "Offset", "Rpy" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TrafficSimulatorMsgs.EntityType), global::TrafficSimulatorMsgs.EntityType.Parser, new[]{ "Type" }, null, new[]{ typeof(global::TrafficSimulatorMsgs.EntityType.Types.Enum) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TrafficSimulatorMsgs.EntitySubtype), global::TrafficSimulatorMsgs.EntitySubtype.Parser, new[]{ "Value" }, null, new[]{ typeof(global::TrafficSimulatorMsgs.EntitySubtype.Types.Enum) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TrafficSimulatorMsgs.EntityStatus), global::TrafficSimulatorMsgs.EntityStatus.Parser, new[]{ "Type", "Subtype", "Time", "Name", "BoundingBox", "ActionStatus", "Pose", "LaneletPose", "LaneletPoseValid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TrafficSimulatorMsgs.Performance), global::TrafficSimulatorMsgs.Performance.Parser, new[]{ "MaxSpeed", "MaxAcceleration", "MaxAccelerationRate", "MaxDeceleration", "MaxDecelerationRate" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TrafficSimulatorMsgs.Axle), global::TrafficSimulatorMsgs.Axle.Parser, new[]{ "MaxSteering", "WheelDiameter", "TrackWidth", "PositionX", "PositionZ" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TrafficSimulatorMsgs.Axles), global::TrafficSimulatorMsgs.Axles.Parser, new[]{ "FrontAxle", "RearAxle" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TrafficSimulatorMsgs.Property), global::TrafficSimulatorMsgs.Property.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TrafficSimulatorMsgs.VehicleParameters), global::TrafficSimulatorMsgs.VehicleParameters.Parser, new[]{ "Name", "Performance", "BoundingBox", "Axles", "Property" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TrafficSimulatorMsgs.PedestrianParameters), global::TrafficSimulatorMsgs.PedestrianParameters.Parser, new[]{ "Name", "BoundingBox" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TrafficSimulatorMsgs.MiscObjectParameters), global::TrafficSimulatorMsgs.MiscObjectParameters.Parser, new[]{ "Name", "BoundingBox" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TrafficSimulatorMsgs.Waypoints), global::TrafficSimulatorMsgs.Waypoints.Parser, new[]{ "Waypoints_" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TrafficSimulatorMsgs.VehicleCommand), global::TrafficSimulatorMsgs.VehicleCommand.Parser, new[]{ "AckermannControlCommand", "GearCommand" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TrafficSimulatorMsgs.Vertex), global::TrafficSimulatorMsgs.Vertex.Parser, new[]{ "Time", "Position" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TrafficSimulatorMsgs.Polyline), global::TrafficSimulatorMsgs.Polyline.Parser, new[]{ "Vertices" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::TrafficSimulatorMsgs.PolylineTrajectory), global::TrafficSimulatorMsgs.PolylineTrajectory.Parser, new[]{ "InitialDistanceOffset", "DynamicConstraintsIgnorable", "BaseTime", "Closed", "Shape" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///*
  /// Protobuf definition of traffic_simulator_msgs/msg/ActionStatus type in ROS 2.
  /// </summary>
  public sealed partial class ActionStatus : pb::IMessage<ActionStatus> {
    private static readonly pb::MessageParser<ActionStatus> _parser = new pb::MessageParser<ActionStatus>(() => new ActionStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ActionStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TrafficSimulatorMsgs.TrafficSimulatorMsgsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActionStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActionStatus(ActionStatus other) : this() {
      currentAction_ = other.currentAction_;
      twist_ = other.twist_ != null ? other.twist_.Clone() : null;
      accel_ = other.accel_ != null ? other.accel_.Clone() : null;
      linearJerk_ = other.linearJerk_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActionStatus Clone() {
      return new ActionStatus(this);
    }

    /// <summary>Field number for the "current_action" field.</summary>
    public const int CurrentActionFieldNumber = 1;
    private string currentAction_ = "";
    /// <summary>
    /// Current action of the entity.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CurrentAction {
      get { return currentAction_; }
      set {
        currentAction_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "twist" field.</summary>
    public const int TwistFieldNumber = 2;
    private global::GeometryMsgs.Twist twist_;
    /// <summary>
    /// Velocity of the entity.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GeometryMsgs.Twist Twist {
      get { return twist_; }
      set {
        twist_ = value;
      }
    }

    /// <summary>Field number for the "accel" field.</summary>
    public const int AccelFieldNumber = 3;
    private global::GeometryMsgs.Accel accel_;
    /// <summary>
    /// Acceleration of the entity.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GeometryMsgs.Accel Accel {
      get { return accel_; }
      set {
        accel_ = value;
      }
    }

    /// <summary>Field number for the "linear_jerk" field.</summary>
    public const int LinearJerkFieldNumber = 4;
    private double linearJerk_;
    /// <summary>
    /// Linear jerk of the entity.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double LinearJerk {
      get { return linearJerk_; }
      set {
        linearJerk_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ActionStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ActionStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CurrentAction != other.CurrentAction) return false;
      if (!object.Equals(Twist, other.Twist)) return false;
      if (!object.Equals(Accel, other.Accel)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(LinearJerk, other.LinearJerk)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CurrentAction.Length != 0) hash ^= CurrentAction.GetHashCode();
      if (twist_ != null) hash ^= Twist.GetHashCode();
      if (accel_ != null) hash ^= Accel.GetHashCode();
      if (LinearJerk != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(LinearJerk);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CurrentAction.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CurrentAction);
      }
      if (twist_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Twist);
      }
      if (accel_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Accel);
      }
      if (LinearJerk != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(LinearJerk);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CurrentAction.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CurrentAction);
      }
      if (twist_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Twist);
      }
      if (accel_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Accel);
      }
      if (LinearJerk != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ActionStatus other) {
      if (other == null) {
        return;
      }
      if (other.CurrentAction.Length != 0) {
        CurrentAction = other.CurrentAction;
      }
      if (other.twist_ != null) {
        if (twist_ == null) {
          Twist = new global::GeometryMsgs.Twist();
        }
        Twist.MergeFrom(other.Twist);
      }
      if (other.accel_ != null) {
        if (accel_ == null) {
          Accel = new global::GeometryMsgs.Accel();
        }
        Accel.MergeFrom(other.Accel);
      }
      if (other.LinearJerk != 0D) {
        LinearJerk = other.LinearJerk;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CurrentAction = input.ReadString();
            break;
          }
          case 18: {
            if (twist_ == null) {
              Twist = new global::GeometryMsgs.Twist();
            }
            input.ReadMessage(Twist);
            break;
          }
          case 26: {
            if (accel_ == null) {
              Accel = new global::GeometryMsgs.Accel();
            }
            input.ReadMessage(Accel);
            break;
          }
          case 33: {
            LinearJerk = input.ReadDouble();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///*
  /// Protobuf definition of traffic_simulator_msgs/msg/BoundingBox type in ROS 2.
  /// </summary>
  public sealed partial class BoundingBox : pb::IMessage<BoundingBox> {
    private static readonly pb::MessageParser<BoundingBox> _parser = new pb::MessageParser<BoundingBox>(() => new BoundingBox());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BoundingBox> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TrafficSimulatorMsgs.TrafficSimulatorMsgsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BoundingBox() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BoundingBox(BoundingBox other) : this() {
      center_ = other.center_ != null ? other.center_.Clone() : null;
      dimensions_ = other.dimensions_ != null ? other.dimensions_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BoundingBox Clone() {
      return new BoundingBox(this);
    }

    /// <summary>Field number for the "center" field.</summary>
    public const int CenterFieldNumber = 1;
    private global::GeometryMsgs.Point center_;
    /// <summary>
    /// Center point of the bounding box.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GeometryMsgs.Point Center {
      get { return center_; }
      set {
        center_ = value;
      }
    }

    /// <summary>Field number for the "dimensions" field.</summary>
    public const int DimensionsFieldNumber = 2;
    private global::GeometryMsgs.Vector3 dimensions_;
    /// <summary>
    /// Size of the bounding box.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GeometryMsgs.Vector3 Dimensions {
      get { return dimensions_; }
      set {
        dimensions_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BoundingBox);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BoundingBox other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Center, other.Center)) return false;
      if (!object.Equals(Dimensions, other.Dimensions)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (center_ != null) hash ^= Center.GetHashCode();
      if (dimensions_ != null) hash ^= Dimensions.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (center_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Center);
      }
      if (dimensions_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Dimensions);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (center_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Center);
      }
      if (dimensions_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Dimensions);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BoundingBox other) {
      if (other == null) {
        return;
      }
      if (other.center_ != null) {
        if (center_ == null) {
          Center = new global::GeometryMsgs.Point();
        }
        Center.MergeFrom(other.Center);
      }
      if (other.dimensions_ != null) {
        if (dimensions_ == null) {
          Dimensions = new global::GeometryMsgs.Vector3();
        }
        Dimensions.MergeFrom(other.Dimensions);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (center_ == null) {
              Center = new global::GeometryMsgs.Point();
            }
            input.ReadMessage(Center);
            break;
          }
          case 18: {
            if (dimensions_ == null) {
              Dimensions = new global::GeometryMsgs.Vector3();
            }
            input.ReadMessage(Dimensions);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///*
  /// Protobuf definition of traffic_simulator_msgs/msg/LaneletPose type in ROS 2.
  /// </summary>
  public sealed partial class LaneletPose : pb::IMessage<LaneletPose> {
    private static readonly pb::MessageParser<LaneletPose> _parser = new pb::MessageParser<LaneletPose>(() => new LaneletPose());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LaneletPose> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TrafficSimulatorMsgs.TrafficSimulatorMsgsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LaneletPose() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LaneletPose(LaneletPose other) : this() {
      laneletId_ = other.laneletId_;
      s_ = other.s_;
      offset_ = other.offset_;
      rpy_ = other.rpy_ != null ? other.rpy_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LaneletPose Clone() {
      return new LaneletPose(this);
    }

    /// <summary>Field number for the "lanelet_id" field.</summary>
    public const int LaneletIdFieldNumber = 1;
    private long laneletId_;
    /// <summary>
    /// Lanelet id of the entity exists.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LaneletId {
      get { return laneletId_; }
      set {
        laneletId_ = value;
      }
    }

    /// <summary>Field number for the "s" field.</summary>
    public const int SFieldNumber = 2;
    private double s_;
    /// <summary>
    /// S value in the lane coordinate.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double S {
      get { return s_; }
      set {
        s_ = value;
      }
    }

    /// <summary>Field number for the "offset" field.</summary>
    public const int OffsetFieldNumber = 3;
    private double offset_;
    /// <summary>
    /// Offset value in the lane coordinate.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    /// <summary>Field number for the "rpy" field.</summary>
    public const int RpyFieldNumber = 4;
    private global::GeometryMsgs.Vector3 rpy_;
    /// <summary>
    /// RPY(roll/pitch/yaw) value in the lane coordinate.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GeometryMsgs.Vector3 Rpy {
      get { return rpy_; }
      set {
        rpy_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LaneletPose);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LaneletPose other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LaneletId != other.LaneletId) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(S, other.S)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Offset, other.Offset)) return false;
      if (!object.Equals(Rpy, other.Rpy)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LaneletId != 0L) hash ^= LaneletId.GetHashCode();
      if (S != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(S);
      if (Offset != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Offset);
      if (rpy_ != null) hash ^= Rpy.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (LaneletId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(LaneletId);
      }
      if (S != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(S);
      }
      if (Offset != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(Offset);
      }
      if (rpy_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Rpy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LaneletId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LaneletId);
      }
      if (S != 0D) {
        size += 1 + 8;
      }
      if (Offset != 0D) {
        size += 1 + 8;
      }
      if (rpy_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Rpy);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LaneletPose other) {
      if (other == null) {
        return;
      }
      if (other.LaneletId != 0L) {
        LaneletId = other.LaneletId;
      }
      if (other.S != 0D) {
        S = other.S;
      }
      if (other.Offset != 0D) {
        Offset = other.Offset;
      }
      if (other.rpy_ != null) {
        if (rpy_ == null) {
          Rpy = new global::GeometryMsgs.Vector3();
        }
        Rpy.MergeFrom(other.Rpy);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            LaneletId = input.ReadInt64();
            break;
          }
          case 17: {
            S = input.ReadDouble();
            break;
          }
          case 25: {
            Offset = input.ReadDouble();
            break;
          }
          case 34: {
            if (rpy_ == null) {
              Rpy = new global::GeometryMsgs.Vector3();
            }
            input.ReadMessage(Rpy);
            break;
          }
        }
      }
    }

  }

  public sealed partial class EntityType : pb::IMessage<EntityType> {
    private static readonly pb::MessageParser<EntityType> _parser = new pb::MessageParser<EntityType>(() => new EntityType());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EntityType> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TrafficSimulatorMsgs.TrafficSimulatorMsgsReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EntityType() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EntityType(EntityType other) : this() {
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EntityType Clone() {
      return new EntityType(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::TrafficSimulatorMsgs.EntityType.Types.Enum type_ = global::TrafficSimulatorMsgs.EntityType.Types.Enum.Ego;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TrafficSimulatorMsgs.EntityType.Types.Enum Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EntityType);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EntityType other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::TrafficSimulatorMsgs.EntityType.Types.Enum.Ego) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != global::TrafficSimulatorMsgs.EntityType.Types.Enum.Ego) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::TrafficSimulatorMsgs.EntityType.Types.Enum.Ego) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EntityType other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::TrafficSimulatorMsgs.EntityType.Types.Enum.Ego) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::TrafficSimulatorMsgs.EntityType.Types.Enum) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the EntityType message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Enum {
        /// <summary>
        /// Ego Vehicle (Autoware Vehicle)
        /// </summary>
        [pbr::OriginalName("EGO")] Ego = 0,
        /// <summary>
        /// Vehicle Entity (NPC Vehicle)
        /// </summary>
        [pbr::OriginalName("VEHICLE")] Vehicle = 1,
        /// <summary>
        /// Pedestrian Entity (NPC Pedestrian)
        /// </summary>
        [pbr::OriginalName("PEDESTRIAN")] Pedestrian = 2,
        /// <summary>
        /// Misc Object Entity (Static Objects in environment like cones)
        /// </summary>
        [pbr::OriginalName("MISC_OBJECT")] MiscObject = 3,
      }

    }
    #endregion

  }

  /// <summary>
  ///*
  /// Protobuf definition of traffic_simulator_msgs/msg/EntitySubtype type in ROS 2.
  /// </summary>
  public sealed partial class EntitySubtype : pb::IMessage<EntitySubtype> {
    private static readonly pb::MessageParser<EntitySubtype> _parser = new pb::MessageParser<EntitySubtype>(() => new EntitySubtype());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EntitySubtype> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TrafficSimulatorMsgs.TrafficSimulatorMsgsReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EntitySubtype() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EntitySubtype(EntitySubtype other) : this() {
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EntitySubtype Clone() {
      return new EntitySubtype(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private global::TrafficSimulatorMsgs.EntitySubtype.Types.Enum value_ = global::TrafficSimulatorMsgs.EntitySubtype.Types.Enum.Unknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TrafficSimulatorMsgs.EntitySubtype.Types.Enum Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EntitySubtype);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EntitySubtype other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Value != global::TrafficSimulatorMsgs.EntitySubtype.Types.Enum.Unknown) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Value != global::TrafficSimulatorMsgs.EntitySubtype.Types.Enum.Unknown) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Value != global::TrafficSimulatorMsgs.EntitySubtype.Types.Enum.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EntitySubtype other) {
      if (other == null) {
        return;
      }
      if (other.Value != global::TrafficSimulatorMsgs.EntitySubtype.Types.Enum.Unknown) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Value = (global::TrafficSimulatorMsgs.EntitySubtype.Types.Enum) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the EntitySubtype message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Enum {
        /// <summary>
        /// The entity is unknown object
        /// </summary>
        [pbr::OriginalName("UNKNOWN")] Unknown = 0,
        /// <summary>
        /// The entity is car like a passenger vehicle
        /// </summary>
        [pbr::OriginalName("CAR")] Car = 1,
        /// <summary>
        /// The entity is truck
        /// </summary>
        [pbr::OriginalName("TRUCK")] Truck = 2,
        /// <summary>
        /// The entity is bus
        /// </summary>
        [pbr::OriginalName("BUS")] Bus = 3,
        /// <summary>
        /// The entity is trailer
        /// </summary>
        [pbr::OriginalName("TRAILER")] Trailer = 4,
        /// <summary>
        /// The entity is motorcycle
        /// </summary>
        [pbr::OriginalName("MOTORCYCLE")] Motorcycle = 5,
        /// <summary>
        /// THe entity is bicycle
        /// </summary>
        [pbr::OriginalName("BICYCLE")] Bicycle = 6,
        /// <summary>
        /// The entity is pedestrian
        /// </summary>
        [pbr::OriginalName("PEDESTRIAN")] Pedestrian = 7,
      }

    }
    #endregion

  }

  /// <summary>
  ///*
  /// Protobuf definition of traffic_simulator_msgs/msg/EntityStatus type in ROS 2.
  /// </summary>
  public sealed partial class EntityStatus : pb::IMessage<EntityStatus> {
    private static readonly pb::MessageParser<EntityStatus> _parser = new pb::MessageParser<EntityStatus>(() => new EntityStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EntityStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TrafficSimulatorMsgs.TrafficSimulatorMsgsReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EntityStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EntityStatus(EntityStatus other) : this() {
      type_ = other.type_ != null ? other.type_.Clone() : null;
      subtype_ = other.subtype_ != null ? other.subtype_.Clone() : null;
      time_ = other.time_;
      name_ = other.name_;
      boundingBox_ = other.boundingBox_ != null ? other.boundingBox_.Clone() : null;
      actionStatus_ = other.actionStatus_ != null ? other.actionStatus_.Clone() : null;
      pose_ = other.pose_ != null ? other.pose_.Clone() : null;
      laneletPose_ = other.laneletPose_ != null ? other.laneletPose_.Clone() : null;
      laneletPoseValid_ = other.laneletPoseValid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EntityStatus Clone() {
      return new EntityStatus(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::TrafficSimulatorMsgs.EntityType type_;
    /// <summary>
    /// Type of the entity.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TrafficSimulatorMsgs.EntityType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "subtype" field.</summary>
    public const int SubtypeFieldNumber = 2;
    private global::TrafficSimulatorMsgs.EntitySubtype subtype_;
    /// <summary>
    /// subtype of the entity.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TrafficSimulatorMsgs.EntitySubtype Subtype {
      get { return subtype_; }
      set {
        subtype_ = value;
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 3;
    private double time_;
    /// <summary>
    /// Current simulation time.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Time {
      get { return time_; }
      set {
        time_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 4;
    private string name_ = "";
    /// <summary>
    /// Name of the entity.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "bounding_box" field.</summary>
    public const int BoundingBoxFieldNumber = 5;
    private global::TrafficSimulatorMsgs.BoundingBox boundingBox_;
    /// <summary>
    /// Bounding box of the entity.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TrafficSimulatorMsgs.BoundingBox BoundingBox {
      get { return boundingBox_; }
      set {
        boundingBox_ = value;
      }
    }

    /// <summary>Field number for the "action_status" field.</summary>
    public const int ActionStatusFieldNumber = 6;
    private global::TrafficSimulatorMsgs.ActionStatus actionStatus_;
    /// <summary>
    /// Action status of the entity.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TrafficSimulatorMsgs.ActionStatus ActionStatus {
      get { return actionStatus_; }
      set {
        actionStatus_ = value;
      }
    }

    /// <summary>Field number for the "pose" field.</summary>
    public const int PoseFieldNumber = 7;
    private global::GeometryMsgs.Pose pose_;
    /// <summary>
    /// Pose in map coordinate of the entity.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GeometryMsgs.Pose Pose {
      get { return pose_; }
      set {
        pose_ = value;
      }
    }

    /// <summary>Field number for the "lanelet_pose" field.</summary>
    public const int LaneletPoseFieldNumber = 8;
    private global::TrafficSimulatorMsgs.LaneletPose laneletPose_;
    /// <summary>
    /// Pose in lane coordinate of the entity.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TrafficSimulatorMsgs.LaneletPose LaneletPose {
      get { return laneletPose_; }
      set {
        laneletPose_ = value;
      }
    }

    /// <summary>Field number for the "lanelet_pose_valid" field.</summary>
    public const int LaneletPoseValidFieldNumber = 9;
    private bool laneletPoseValid_;
    /// <summary>
    /// If true, the lane matching of the entity is succeeded.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool LaneletPoseValid {
      get { return laneletPoseValid_; }
      set {
        laneletPoseValid_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EntityStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EntityStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Type, other.Type)) return false;
      if (!object.Equals(Subtype, other.Subtype)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Time, other.Time)) return false;
      if (Name != other.Name) return false;
      if (!object.Equals(BoundingBox, other.BoundingBox)) return false;
      if (!object.Equals(ActionStatus, other.ActionStatus)) return false;
      if (!object.Equals(Pose, other.Pose)) return false;
      if (!object.Equals(LaneletPose, other.LaneletPose)) return false;
      if (LaneletPoseValid != other.LaneletPoseValid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (type_ != null) hash ^= Type.GetHashCode();
      if (subtype_ != null) hash ^= Subtype.GetHashCode();
      if (Time != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Time);
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (boundingBox_ != null) hash ^= BoundingBox.GetHashCode();
      if (actionStatus_ != null) hash ^= ActionStatus.GetHashCode();
      if (pose_ != null) hash ^= Pose.GetHashCode();
      if (laneletPose_ != null) hash ^= LaneletPose.GetHashCode();
      if (LaneletPoseValid != false) hash ^= LaneletPoseValid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (type_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Type);
      }
      if (subtype_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Subtype);
      }
      if (Time != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(Time);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (boundingBox_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(BoundingBox);
      }
      if (actionStatus_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ActionStatus);
      }
      if (pose_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Pose);
      }
      if (laneletPose_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(LaneletPose);
      }
      if (LaneletPoseValid != false) {
        output.WriteRawTag(72);
        output.WriteBool(LaneletPoseValid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (type_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Type);
      }
      if (subtype_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Subtype);
      }
      if (Time != 0D) {
        size += 1 + 8;
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (boundingBox_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BoundingBox);
      }
      if (actionStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ActionStatus);
      }
      if (pose_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pose);
      }
      if (laneletPose_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LaneletPose);
      }
      if (LaneletPoseValid != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EntityStatus other) {
      if (other == null) {
        return;
      }
      if (other.type_ != null) {
        if (type_ == null) {
          Type = new global::TrafficSimulatorMsgs.EntityType();
        }
        Type.MergeFrom(other.Type);
      }
      if (other.subtype_ != null) {
        if (subtype_ == null) {
          Subtype = new global::TrafficSimulatorMsgs.EntitySubtype();
        }
        Subtype.MergeFrom(other.Subtype);
      }
      if (other.Time != 0D) {
        Time = other.Time;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.boundingBox_ != null) {
        if (boundingBox_ == null) {
          BoundingBox = new global::TrafficSimulatorMsgs.BoundingBox();
        }
        BoundingBox.MergeFrom(other.BoundingBox);
      }
      if (other.actionStatus_ != null) {
        if (actionStatus_ == null) {
          ActionStatus = new global::TrafficSimulatorMsgs.ActionStatus();
        }
        ActionStatus.MergeFrom(other.ActionStatus);
      }
      if (other.pose_ != null) {
        if (pose_ == null) {
          Pose = new global::GeometryMsgs.Pose();
        }
        Pose.MergeFrom(other.Pose);
      }
      if (other.laneletPose_ != null) {
        if (laneletPose_ == null) {
          LaneletPose = new global::TrafficSimulatorMsgs.LaneletPose();
        }
        LaneletPose.MergeFrom(other.LaneletPose);
      }
      if (other.LaneletPoseValid != false) {
        LaneletPoseValid = other.LaneletPoseValid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (type_ == null) {
              Type = new global::TrafficSimulatorMsgs.EntityType();
            }
            input.ReadMessage(Type);
            break;
          }
          case 18: {
            if (subtype_ == null) {
              Subtype = new global::TrafficSimulatorMsgs.EntitySubtype();
            }
            input.ReadMessage(Subtype);
            break;
          }
          case 25: {
            Time = input.ReadDouble();
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
          case 42: {
            if (boundingBox_ == null) {
              BoundingBox = new global::TrafficSimulatorMsgs.BoundingBox();
            }
            input.ReadMessage(BoundingBox);
            break;
          }
          case 50: {
            if (actionStatus_ == null) {
              ActionStatus = new global::TrafficSimulatorMsgs.ActionStatus();
            }
            input.ReadMessage(ActionStatus);
            break;
          }
          case 58: {
            if (pose_ == null) {
              Pose = new global::GeometryMsgs.Pose();
            }
            input.ReadMessage(Pose);
            break;
          }
          case 66: {
            if (laneletPose_ == null) {
              LaneletPose = new global::TrafficSimulatorMsgs.LaneletPose();
            }
            input.ReadMessage(LaneletPose);
            break;
          }
          case 72: {
            LaneletPoseValid = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///*
  /// Protobuf definition of traffic_simulator_msgs/msg/Performance type in ROS 2.
  /// </summary>
  public sealed partial class Performance : pb::IMessage<Performance> {
    private static readonly pb::MessageParser<Performance> _parser = new pb::MessageParser<Performance>(() => new Performance());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Performance> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TrafficSimulatorMsgs.TrafficSimulatorMsgsReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Performance() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Performance(Performance other) : this() {
      maxSpeed_ = other.maxSpeed_;
      maxAcceleration_ = other.maxAcceleration_;
      maxAccelerationRate_ = other.maxAccelerationRate_;
      maxDeceleration_ = other.maxDeceleration_;
      maxDecelerationRate_ = other.maxDecelerationRate_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Performance Clone() {
      return new Performance(this);
    }

    /// <summary>Field number for the "max_speed" field.</summary>
    public const int MaxSpeedFieldNumber = 1;
    private double maxSpeed_;
    /// <summary>
    /// Max speed of the entity.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double MaxSpeed {
      get { return maxSpeed_; }
      set {
        maxSpeed_ = value;
      }
    }

    /// <summary>Field number for the "max_acceleration" field.</summary>
    public const int MaxAccelerationFieldNumber = 2;
    private double maxAcceleration_;
    /// <summary>
    /// Max acceleration of the entity.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double MaxAcceleration {
      get { return maxAcceleration_; }
      set {
        maxAcceleration_ = value;
      }
    }

    /// <summary>Field number for the "max_acceleration_rate" field.</summary>
    public const int MaxAccelerationRateFieldNumber = 3;
    private double maxAccelerationRate_;
    /// <summary>
    /// Max acceleration rate of the entity.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double MaxAccelerationRate {
      get { return maxAccelerationRate_; }
      set {
        maxAccelerationRate_ = value;
      }
    }

    /// <summary>Field number for the "max_deceleration" field.</summary>
    public const int MaxDecelerationFieldNumber = 4;
    private double maxDeceleration_;
    /// <summary>
    /// Max deceleration of the entity.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double MaxDeceleration {
      get { return maxDeceleration_; }
      set {
        maxDeceleration_ = value;
      }
    }

    /// <summary>Field number for the "max_deceleration_rate" field.</summary>
    public const int MaxDecelerationRateFieldNumber = 5;
    private double maxDecelerationRate_;
    /// <summary>
    /// Max deceleration rate of the entity.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double MaxDecelerationRate {
      get { return maxDecelerationRate_; }
      set {
        maxDecelerationRate_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Performance);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Performance other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(MaxSpeed, other.MaxSpeed)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(MaxAcceleration, other.MaxAcceleration)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(MaxAccelerationRate, other.MaxAccelerationRate)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(MaxDeceleration, other.MaxDeceleration)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(MaxDecelerationRate, other.MaxDecelerationRate)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MaxSpeed != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(MaxSpeed);
      if (MaxAcceleration != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(MaxAcceleration);
      if (MaxAccelerationRate != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(MaxAccelerationRate);
      if (MaxDeceleration != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(MaxDeceleration);
      if (MaxDecelerationRate != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(MaxDecelerationRate);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MaxSpeed != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(MaxSpeed);
      }
      if (MaxAcceleration != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(MaxAcceleration);
      }
      if (MaxAccelerationRate != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(MaxAccelerationRate);
      }
      if (MaxDeceleration != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(MaxDeceleration);
      }
      if (MaxDecelerationRate != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(MaxDecelerationRate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MaxSpeed != 0D) {
        size += 1 + 8;
      }
      if (MaxAcceleration != 0D) {
        size += 1 + 8;
      }
      if (MaxAccelerationRate != 0D) {
        size += 1 + 8;
      }
      if (MaxDeceleration != 0D) {
        size += 1 + 8;
      }
      if (MaxDecelerationRate != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Performance other) {
      if (other == null) {
        return;
      }
      if (other.MaxSpeed != 0D) {
        MaxSpeed = other.MaxSpeed;
      }
      if (other.MaxAcceleration != 0D) {
        MaxAcceleration = other.MaxAcceleration;
      }
      if (other.MaxAccelerationRate != 0D) {
        MaxAccelerationRate = other.MaxAccelerationRate;
      }
      if (other.MaxDeceleration != 0D) {
        MaxDeceleration = other.MaxDeceleration;
      }
      if (other.MaxDecelerationRate != 0D) {
        MaxDecelerationRate = other.MaxDecelerationRate;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            MaxSpeed = input.ReadDouble();
            break;
          }
          case 17: {
            MaxAcceleration = input.ReadDouble();
            break;
          }
          case 25: {
            MaxAccelerationRate = input.ReadDouble();
            break;
          }
          case 33: {
            MaxDeceleration = input.ReadDouble();
            break;
          }
          case 41: {
            MaxDecelerationRate = input.ReadDouble();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///*
  /// Protobuf definition of traffic_simulator_msgs/msg/Axle type in ROS 2.
  /// </summary>
  public sealed partial class Axle : pb::IMessage<Axle> {
    private static readonly pb::MessageParser<Axle> _parser = new pb::MessageParser<Axle>(() => new Axle());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Axle> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TrafficSimulatorMsgs.TrafficSimulatorMsgsReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Axle() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Axle(Axle other) : this() {
      maxSteering_ = other.maxSteering_;
      wheelDiameter_ = other.wheelDiameter_;
      trackWidth_ = other.trackWidth_;
      positionX_ = other.positionX_;
      positionZ_ = other.positionZ_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Axle Clone() {
      return new Axle(this);
    }

    /// <summary>Field number for the "max_steering" field.</summary>
    public const int MaxSteeringFieldNumber = 1;
    private double maxSteering_;
    /// <summary>
    /// Max steering of the entity axle.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double MaxSteering {
      get { return maxSteering_; }
      set {
        maxSteering_ = value;
      }
    }

    /// <summary>Field number for the "wheel_diameter" field.</summary>
    public const int WheelDiameterFieldNumber = 2;
    private double wheelDiameter_;
    /// <summary>
    /// Wheel diameter of the entity axle.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double WheelDiameter {
      get { return wheelDiameter_; }
      set {
        wheelDiameter_ = value;
      }
    }

    /// <summary>Field number for the "track_width" field.</summary>
    public const int TrackWidthFieldNumber = 3;
    private double trackWidth_;
    /// <summary>
    /// Track width of the entity axle.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double TrackWidth {
      get { return trackWidth_; }
      set {
        trackWidth_ = value;
      }
    }

    /// <summary>Field number for the "position_x" field.</summary>
    public const int PositionXFieldNumber = 4;
    private double positionX_;
    /// <summary>
    /// Position x of the entity axle.(longitudinal)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double PositionX {
      get { return positionX_; }
      set {
        positionX_ = value;
      }
    }

    /// <summary>Field number for the "position_z" field.</summary>
    public const int PositionZFieldNumber = 5;
    private double positionZ_;
    /// <summary>
    /// Position z of the entity axle.(lateral)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double PositionZ {
      get { return positionZ_; }
      set {
        positionZ_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Axle);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Axle other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(MaxSteering, other.MaxSteering)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(WheelDiameter, other.WheelDiameter)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(TrackWidth, other.TrackWidth)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(PositionX, other.PositionX)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(PositionZ, other.PositionZ)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MaxSteering != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(MaxSteering);
      if (WheelDiameter != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(WheelDiameter);
      if (TrackWidth != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(TrackWidth);
      if (PositionX != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(PositionX);
      if (PositionZ != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(PositionZ);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MaxSteering != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(MaxSteering);
      }
      if (WheelDiameter != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(WheelDiameter);
      }
      if (TrackWidth != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(TrackWidth);
      }
      if (PositionX != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(PositionX);
      }
      if (PositionZ != 0D) {
        output.WriteRawTag(41);
        output.WriteDouble(PositionZ);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MaxSteering != 0D) {
        size += 1 + 8;
      }
      if (WheelDiameter != 0D) {
        size += 1 + 8;
      }
      if (TrackWidth != 0D) {
        size += 1 + 8;
      }
      if (PositionX != 0D) {
        size += 1 + 8;
      }
      if (PositionZ != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Axle other) {
      if (other == null) {
        return;
      }
      if (other.MaxSteering != 0D) {
        MaxSteering = other.MaxSteering;
      }
      if (other.WheelDiameter != 0D) {
        WheelDiameter = other.WheelDiameter;
      }
      if (other.TrackWidth != 0D) {
        TrackWidth = other.TrackWidth;
      }
      if (other.PositionX != 0D) {
        PositionX = other.PositionX;
      }
      if (other.PositionZ != 0D) {
        PositionZ = other.PositionZ;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            MaxSteering = input.ReadDouble();
            break;
          }
          case 17: {
            WheelDiameter = input.ReadDouble();
            break;
          }
          case 25: {
            TrackWidth = input.ReadDouble();
            break;
          }
          case 33: {
            PositionX = input.ReadDouble();
            break;
          }
          case 41: {
            PositionZ = input.ReadDouble();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///*
  /// Protobuf definition of traffic_simulator_msgs/msg/Axles type in ROS 2.
  /// </summary>
  public sealed partial class Axles : pb::IMessage<Axles> {
    private static readonly pb::MessageParser<Axles> _parser = new pb::MessageParser<Axles>(() => new Axles());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Axles> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TrafficSimulatorMsgs.TrafficSimulatorMsgsReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Axles() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Axles(Axles other) : this() {
      frontAxle_ = other.frontAxle_ != null ? other.frontAxle_.Clone() : null;
      rearAxle_ = other.rearAxle_ != null ? other.rearAxle_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Axles Clone() {
      return new Axles(this);
    }

    /// <summary>Field number for the "front_axle" field.</summary>
    public const int FrontAxleFieldNumber = 1;
    private global::TrafficSimulatorMsgs.Axle frontAxle_;
    /// <summary>
    /// Parameters of the front axle of the entity.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TrafficSimulatorMsgs.Axle FrontAxle {
      get { return frontAxle_; }
      set {
        frontAxle_ = value;
      }
    }

    /// <summary>Field number for the "rear_axle" field.</summary>
    public const int RearAxleFieldNumber = 2;
    private global::TrafficSimulatorMsgs.Axle rearAxle_;
    /// <summary>
    /// Parameters of rear axle of the entity.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TrafficSimulatorMsgs.Axle RearAxle {
      get { return rearAxle_; }
      set {
        rearAxle_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Axles);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Axles other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(FrontAxle, other.FrontAxle)) return false;
      if (!object.Equals(RearAxle, other.RearAxle)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (frontAxle_ != null) hash ^= FrontAxle.GetHashCode();
      if (rearAxle_ != null) hash ^= RearAxle.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (frontAxle_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(FrontAxle);
      }
      if (rearAxle_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RearAxle);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (frontAxle_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FrontAxle);
      }
      if (rearAxle_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RearAxle);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Axles other) {
      if (other == null) {
        return;
      }
      if (other.frontAxle_ != null) {
        if (frontAxle_ == null) {
          FrontAxle = new global::TrafficSimulatorMsgs.Axle();
        }
        FrontAxle.MergeFrom(other.FrontAxle);
      }
      if (other.rearAxle_ != null) {
        if (rearAxle_ == null) {
          RearAxle = new global::TrafficSimulatorMsgs.Axle();
        }
        RearAxle.MergeFrom(other.RearAxle);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (frontAxle_ == null) {
              FrontAxle = new global::TrafficSimulatorMsgs.Axle();
            }
            input.ReadMessage(FrontAxle);
            break;
          }
          case 18: {
            if (rearAxle_ == null) {
              RearAxle = new global::TrafficSimulatorMsgs.Axle();
            }
            input.ReadMessage(RearAxle);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///*
  /// Protobuf definition of traffic_simulator_msgs/msg/Property type in ROS 2.
  /// </summary>
  public sealed partial class Property : pb::IMessage<Property> {
    private static readonly pb::MessageParser<Property> _parser = new pb::MessageParser<Property>(() => new Property());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Property> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TrafficSimulatorMsgs.TrafficSimulatorMsgsReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Property() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Property(Property other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Property Clone() {
      return new Property(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Property);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Property other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Property other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  ///*
  /// Protobuf definition of traffic_simulator_msgs/msg/VehicleParameters type in ROS 2.
  /// </summary>
  public sealed partial class VehicleParameters : pb::IMessage<VehicleParameters> {
    private static readonly pb::MessageParser<VehicleParameters> _parser = new pb::MessageParser<VehicleParameters>(() => new VehicleParameters());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VehicleParameters> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TrafficSimulatorMsgs.TrafficSimulatorMsgsReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VehicleParameters() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VehicleParameters(VehicleParameters other) : this() {
      name_ = other.name_;
      performance_ = other.performance_ != null ? other.performance_.Clone() : null;
      boundingBox_ = other.boundingBox_ != null ? other.boundingBox_.Clone() : null;
      axles_ = other.axles_ != null ? other.axles_.Clone() : null;
      property_ = other.property_ != null ? other.property_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VehicleParameters Clone() {
      return new VehicleParameters(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Name of the vehicle entity
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "performance" field.</summary>
    public const int PerformanceFieldNumber = 2;
    private global::TrafficSimulatorMsgs.Performance performance_;
    /// <summary>
    /// Performance parameter of vehicle entity.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TrafficSimulatorMsgs.Performance Performance {
      get { return performance_; }
      set {
        performance_ = value;
      }
    }

    /// <summary>Field number for the "bounding_box" field.</summary>
    public const int BoundingBoxFieldNumber = 3;
    private global::TrafficSimulatorMsgs.BoundingBox boundingBox_;
    /// <summary>
    /// Bounding box of the vehicle entity.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TrafficSimulatorMsgs.BoundingBox BoundingBox {
      get { return boundingBox_; }
      set {
        boundingBox_ = value;
      }
    }

    /// <summary>Field number for the "axles" field.</summary>
    public const int AxlesFieldNumber = 4;
    private global::TrafficSimulatorMsgs.Axles axles_;
    /// <summary>
    /// Axles of the vehicle entity.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TrafficSimulatorMsgs.Axles Axles {
      get { return axles_; }
      set {
        axles_ = value;
      }
    }

    /// <summary>Field number for the "property" field.</summary>
    public const int PropertyFieldNumber = 5;
    private global::TrafficSimulatorMsgs.Property property_;
    /// <summary>
    /// Other parameters of the vehicle entity.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TrafficSimulatorMsgs.Property Property {
      get { return property_; }
      set {
        property_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VehicleParameters);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VehicleParameters other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!object.Equals(Performance, other.Performance)) return false;
      if (!object.Equals(BoundingBox, other.BoundingBox)) return false;
      if (!object.Equals(Axles, other.Axles)) return false;
      if (!object.Equals(Property, other.Property)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (performance_ != null) hash ^= Performance.GetHashCode();
      if (boundingBox_ != null) hash ^= BoundingBox.GetHashCode();
      if (axles_ != null) hash ^= Axles.GetHashCode();
      if (property_ != null) hash ^= Property.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (performance_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Performance);
      }
      if (boundingBox_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(BoundingBox);
      }
      if (axles_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Axles);
      }
      if (property_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Property);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (performance_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Performance);
      }
      if (boundingBox_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BoundingBox);
      }
      if (axles_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Axles);
      }
      if (property_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Property);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VehicleParameters other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.performance_ != null) {
        if (performance_ == null) {
          Performance = new global::TrafficSimulatorMsgs.Performance();
        }
        Performance.MergeFrom(other.Performance);
      }
      if (other.boundingBox_ != null) {
        if (boundingBox_ == null) {
          BoundingBox = new global::TrafficSimulatorMsgs.BoundingBox();
        }
        BoundingBox.MergeFrom(other.BoundingBox);
      }
      if (other.axles_ != null) {
        if (axles_ == null) {
          Axles = new global::TrafficSimulatorMsgs.Axles();
        }
        Axles.MergeFrom(other.Axles);
      }
      if (other.property_ != null) {
        if (property_ == null) {
          Property = new global::TrafficSimulatorMsgs.Property();
        }
        Property.MergeFrom(other.Property);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (performance_ == null) {
              Performance = new global::TrafficSimulatorMsgs.Performance();
            }
            input.ReadMessage(Performance);
            break;
          }
          case 26: {
            if (boundingBox_ == null) {
              BoundingBox = new global::TrafficSimulatorMsgs.BoundingBox();
            }
            input.ReadMessage(BoundingBox);
            break;
          }
          case 34: {
            if (axles_ == null) {
              Axles = new global::TrafficSimulatorMsgs.Axles();
            }
            input.ReadMessage(Axles);
            break;
          }
          case 42: {
            if (property_ == null) {
              Property = new global::TrafficSimulatorMsgs.Property();
            }
            input.ReadMessage(Property);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///*
  /// Protobuf definition of traffic_simulator_msgs/msg/PedestrianParameters type in ROS 2.
  /// </summary>
  public sealed partial class PedestrianParameters : pb::IMessage<PedestrianParameters> {
    private static readonly pb::MessageParser<PedestrianParameters> _parser = new pb::MessageParser<PedestrianParameters>(() => new PedestrianParameters());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PedestrianParameters> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TrafficSimulatorMsgs.TrafficSimulatorMsgsReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PedestrianParameters() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PedestrianParameters(PedestrianParameters other) : this() {
      name_ = other.name_;
      boundingBox_ = other.boundingBox_ != null ? other.boundingBox_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PedestrianParameters Clone() {
      return new PedestrianParameters(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Name of the pedestrian entity.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "bounding_box" field.</summary>
    public const int BoundingBoxFieldNumber = 2;
    private global::TrafficSimulatorMsgs.BoundingBox boundingBox_;
    /// <summary>
    /// Bounding box of the pedestrian entity.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TrafficSimulatorMsgs.BoundingBox BoundingBox {
      get { return boundingBox_; }
      set {
        boundingBox_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PedestrianParameters);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PedestrianParameters other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!object.Equals(BoundingBox, other.BoundingBox)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (boundingBox_ != null) hash ^= BoundingBox.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (boundingBox_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(BoundingBox);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (boundingBox_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BoundingBox);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PedestrianParameters other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.boundingBox_ != null) {
        if (boundingBox_ == null) {
          BoundingBox = new global::TrafficSimulatorMsgs.BoundingBox();
        }
        BoundingBox.MergeFrom(other.BoundingBox);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (boundingBox_ == null) {
              BoundingBox = new global::TrafficSimulatorMsgs.BoundingBox();
            }
            input.ReadMessage(BoundingBox);
            break;
          }
        }
      }
    }

  }

  public sealed partial class MiscObjectParameters : pb::IMessage<MiscObjectParameters> {
    private static readonly pb::MessageParser<MiscObjectParameters> _parser = new pb::MessageParser<MiscObjectParameters>(() => new MiscObjectParameters());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MiscObjectParameters> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TrafficSimulatorMsgs.TrafficSimulatorMsgsReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MiscObjectParameters() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MiscObjectParameters(MiscObjectParameters other) : this() {
      name_ = other.name_;
      boundingBox_ = other.boundingBox_ != null ? other.boundingBox_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MiscObjectParameters Clone() {
      return new MiscObjectParameters(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Name of the pedestrian entity.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "bounding_box" field.</summary>
    public const int BoundingBoxFieldNumber = 2;
    private global::TrafficSimulatorMsgs.BoundingBox boundingBox_;
    /// <summary>
    /// Bounding box of the pedestrian entity.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TrafficSimulatorMsgs.BoundingBox BoundingBox {
      get { return boundingBox_; }
      set {
        boundingBox_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MiscObjectParameters);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MiscObjectParameters other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!object.Equals(BoundingBox, other.BoundingBox)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (boundingBox_ != null) hash ^= BoundingBox.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (boundingBox_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(BoundingBox);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (boundingBox_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BoundingBox);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MiscObjectParameters other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.boundingBox_ != null) {
        if (boundingBox_ == null) {
          BoundingBox = new global::TrafficSimulatorMsgs.BoundingBox();
        }
        BoundingBox.MergeFrom(other.BoundingBox);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (boundingBox_ == null) {
              BoundingBox = new global::TrafficSimulatorMsgs.BoundingBox();
            }
            input.ReadMessage(BoundingBox);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///*
  /// Protobuf definition of traffic_simulator_msgs/msg/Waypoints type in ROS 2.
  /// </summary>
  public sealed partial class Waypoints : pb::IMessage<Waypoints> {
    private static readonly pb::MessageParser<Waypoints> _parser = new pb::MessageParser<Waypoints>(() => new Waypoints());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Waypoints> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TrafficSimulatorMsgs.TrafficSimulatorMsgsReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Waypoints() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Waypoints(Waypoints other) : this() {
      waypoints_ = other.waypoints_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Waypoints Clone() {
      return new Waypoints(this);
    }

    /// <summary>Field number for the "waypoints" field.</summary>
    public const int Waypoints_FieldNumber = 1;
    private static readonly pb::FieldCodec<global::GeometryMsgs.Point> _repeated_waypoints_codec
        = pb::FieldCodec.ForMessage(10, global::GeometryMsgs.Point.Parser);
    private readonly pbc::RepeatedField<global::GeometryMsgs.Point> waypoints_ = new pbc::RepeatedField<global::GeometryMsgs.Point>();
    /// <summary>
    /// Waypoints of the entity.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GeometryMsgs.Point> Waypoints_ {
      get { return waypoints_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Waypoints);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Waypoints other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!waypoints_.Equals(other.waypoints_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= waypoints_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      waypoints_.WriteTo(output, _repeated_waypoints_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += waypoints_.CalculateSize(_repeated_waypoints_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Waypoints other) {
      if (other == null) {
        return;
      }
      waypoints_.Add(other.waypoints_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            waypoints_.AddEntriesFrom(input, _repeated_waypoints_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class VehicleCommand : pb::IMessage<VehicleCommand> {
    private static readonly pb::MessageParser<VehicleCommand> _parser = new pb::MessageParser<VehicleCommand>(() => new VehicleCommand());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VehicleCommand> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TrafficSimulatorMsgs.TrafficSimulatorMsgsReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VehicleCommand() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VehicleCommand(VehicleCommand other) : this() {
      ackermannControlCommand_ = other.ackermannControlCommand_ != null ? other.ackermannControlCommand_.Clone() : null;
      gearCommand_ = other.gearCommand_ != null ? other.gearCommand_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VehicleCommand Clone() {
      return new VehicleCommand(this);
    }

    /// <summary>Field number for the "ackermann_control_command" field.</summary>
    public const int AckermannControlCommandFieldNumber = 1;
    private global::AutowareAutoControlMsgs.AckermannControlCommand ackermannControlCommand_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AutowareAutoControlMsgs.AckermannControlCommand AckermannControlCommand {
      get { return ackermannControlCommand_; }
      set {
        ackermannControlCommand_ = value;
      }
    }

    /// <summary>Field number for the "gear_command" field.</summary>
    public const int GearCommandFieldNumber = 2;
    private global::AutowareAutoVehicleMsgs.GearCommand gearCommand_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::AutowareAutoVehicleMsgs.GearCommand GearCommand {
      get { return gearCommand_; }
      set {
        gearCommand_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VehicleCommand);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VehicleCommand other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AckermannControlCommand, other.AckermannControlCommand)) return false;
      if (!object.Equals(GearCommand, other.GearCommand)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ackermannControlCommand_ != null) hash ^= AckermannControlCommand.GetHashCode();
      if (gearCommand_ != null) hash ^= GearCommand.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ackermannControlCommand_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AckermannControlCommand);
      }
      if (gearCommand_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(GearCommand);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ackermannControlCommand_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AckermannControlCommand);
      }
      if (gearCommand_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GearCommand);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VehicleCommand other) {
      if (other == null) {
        return;
      }
      if (other.ackermannControlCommand_ != null) {
        if (ackermannControlCommand_ == null) {
          AckermannControlCommand = new global::AutowareAutoControlMsgs.AckermannControlCommand();
        }
        AckermannControlCommand.MergeFrom(other.AckermannControlCommand);
      }
      if (other.gearCommand_ != null) {
        if (gearCommand_ == null) {
          GearCommand = new global::AutowareAutoVehicleMsgs.GearCommand();
        }
        GearCommand.MergeFrom(other.GearCommand);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (ackermannControlCommand_ == null) {
              AckermannControlCommand = new global::AutowareAutoControlMsgs.AckermannControlCommand();
            }
            input.ReadMessage(AckermannControlCommand);
            break;
          }
          case 18: {
            if (gearCommand_ == null) {
              GearCommand = new global::AutowareAutoVehicleMsgs.GearCommand();
            }
            input.ReadMessage(GearCommand);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///*
  /// Protobuf definition of traffic_simulator_msgs/msg/Vertex type in ROS 2.
  /// </summary>
  public sealed partial class Vertex : pb::IMessage<Vertex> {
    private static readonly pb::MessageParser<Vertex> _parser = new pb::MessageParser<Vertex>(() => new Vertex());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Vertex> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TrafficSimulatorMsgs.TrafficSimulatorMsgsReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Vertex() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Vertex(Vertex other) : this() {
      time_ = other.time_;
      position_ = other.position_ != null ? other.position_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Vertex Clone() {
      return new Vertex(this);
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 1;
    private double time_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Time {
      get { return time_; }
      set {
        time_ = value;
      }
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 2;
    private global::GeometryMsgs.Pose position_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GeometryMsgs.Pose Position {
      get { return position_; }
      set {
        position_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Vertex);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Vertex other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Time, other.Time)) return false;
      if (!object.Equals(Position, other.Position)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Time != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Time);
      if (position_ != null) hash ^= Position.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Time != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(Time);
      }
      if (position_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Position);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Time != 0D) {
        size += 1 + 8;
      }
      if (position_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Vertex other) {
      if (other == null) {
        return;
      }
      if (other.Time != 0D) {
        Time = other.Time;
      }
      if (other.position_ != null) {
        if (position_ == null) {
          Position = new global::GeometryMsgs.Pose();
        }
        Position.MergeFrom(other.Position);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            Time = input.ReadDouble();
            break;
          }
          case 18: {
            if (position_ == null) {
              Position = new global::GeometryMsgs.Pose();
            }
            input.ReadMessage(Position);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///*
  /// Protobuf definition of traffic_simulator_msgs/msg/Polyline type in ROS 2.
  /// </summary>
  public sealed partial class Polyline : pb::IMessage<Polyline> {
    private static readonly pb::MessageParser<Polyline> _parser = new pb::MessageParser<Polyline>(() => new Polyline());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Polyline> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TrafficSimulatorMsgs.TrafficSimulatorMsgsReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Polyline() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Polyline(Polyline other) : this() {
      vertices_ = other.vertices_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Polyline Clone() {
      return new Polyline(this);
    }

    /// <summary>Field number for the "vertices" field.</summary>
    public const int VerticesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::TrafficSimulatorMsgs.Vertex> _repeated_vertices_codec
        = pb::FieldCodec.ForMessage(10, global::TrafficSimulatorMsgs.Vertex.Parser);
    private readonly pbc::RepeatedField<global::TrafficSimulatorMsgs.Vertex> vertices_ = new pbc::RepeatedField<global::TrafficSimulatorMsgs.Vertex>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::TrafficSimulatorMsgs.Vertex> Vertices {
      get { return vertices_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Polyline);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Polyline other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!vertices_.Equals(other.vertices_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= vertices_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      vertices_.WriteTo(output, _repeated_vertices_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += vertices_.CalculateSize(_repeated_vertices_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Polyline other) {
      if (other == null) {
        return;
      }
      vertices_.Add(other.vertices_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            vertices_.AddEntriesFrom(input, _repeated_vertices_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///*
  /// Protobuf definition of traffic_simulator_msgs/msg/PolylineTrajectory type in ROS 2.
  /// </summary>
  public sealed partial class PolylineTrajectory : pb::IMessage<PolylineTrajectory> {
    private static readonly pb::MessageParser<PolylineTrajectory> _parser = new pb::MessageParser<PolylineTrajectory>(() => new PolylineTrajectory());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PolylineTrajectory> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::TrafficSimulatorMsgs.TrafficSimulatorMsgsReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PolylineTrajectory() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PolylineTrajectory(PolylineTrajectory other) : this() {
      initialDistanceOffset_ = other.initialDistanceOffset_;
      dynamicConstraintsIgnorable_ = other.dynamicConstraintsIgnorable_;
      baseTime_ = other.baseTime_;
      closed_ = other.closed_;
      shape_ = other.shape_ != null ? other.shape_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PolylineTrajectory Clone() {
      return new PolylineTrajectory(this);
    }

    /// <summary>Field number for the "initial_distance_offset" field.</summary>
    public const int InitialDistanceOffsetFieldNumber = 1;
    private double initialDistanceOffset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double InitialDistanceOffset {
      get { return initialDistanceOffset_; }
      set {
        initialDistanceOffset_ = value;
      }
    }

    /// <summary>Field number for the "dynamic_constraints_ignorable" field.</summary>
    public const int DynamicConstraintsIgnorableFieldNumber = 2;
    private bool dynamicConstraintsIgnorable_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool DynamicConstraintsIgnorable {
      get { return dynamicConstraintsIgnorable_; }
      set {
        dynamicConstraintsIgnorable_ = value;
      }
    }

    /// <summary>Field number for the "base_time" field.</summary>
    public const int BaseTimeFieldNumber = 3;
    private double baseTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double BaseTime {
      get { return baseTime_; }
      set {
        baseTime_ = value;
      }
    }

    /// <summary>Field number for the "closed" field.</summary>
    public const int ClosedFieldNumber = 4;
    private bool closed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Closed {
      get { return closed_; }
      set {
        closed_ = value;
      }
    }

    /// <summary>Field number for the "shape" field.</summary>
    public const int ShapeFieldNumber = 5;
    private global::TrafficSimulatorMsgs.Polyline shape_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::TrafficSimulatorMsgs.Polyline Shape {
      get { return shape_; }
      set {
        shape_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PolylineTrajectory);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PolylineTrajectory other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(InitialDistanceOffset, other.InitialDistanceOffset)) return false;
      if (DynamicConstraintsIgnorable != other.DynamicConstraintsIgnorable) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(BaseTime, other.BaseTime)) return false;
      if (Closed != other.Closed) return false;
      if (!object.Equals(Shape, other.Shape)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (InitialDistanceOffset != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(InitialDistanceOffset);
      if (DynamicConstraintsIgnorable != false) hash ^= DynamicConstraintsIgnorable.GetHashCode();
      if (BaseTime != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(BaseTime);
      if (Closed != false) hash ^= Closed.GetHashCode();
      if (shape_ != null) hash ^= Shape.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (InitialDistanceOffset != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(InitialDistanceOffset);
      }
      if (DynamicConstraintsIgnorable != false) {
        output.WriteRawTag(16);
        output.WriteBool(DynamicConstraintsIgnorable);
      }
      if (BaseTime != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(BaseTime);
      }
      if (Closed != false) {
        output.WriteRawTag(32);
        output.WriteBool(Closed);
      }
      if (shape_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Shape);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (InitialDistanceOffset != 0D) {
        size += 1 + 8;
      }
      if (DynamicConstraintsIgnorable != false) {
        size += 1 + 1;
      }
      if (BaseTime != 0D) {
        size += 1 + 8;
      }
      if (Closed != false) {
        size += 1 + 1;
      }
      if (shape_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Shape);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PolylineTrajectory other) {
      if (other == null) {
        return;
      }
      if (other.InitialDistanceOffset != 0D) {
        InitialDistanceOffset = other.InitialDistanceOffset;
      }
      if (other.DynamicConstraintsIgnorable != false) {
        DynamicConstraintsIgnorable = other.DynamicConstraintsIgnorable;
      }
      if (other.BaseTime != 0D) {
        BaseTime = other.BaseTime;
      }
      if (other.Closed != false) {
        Closed = other.Closed;
      }
      if (other.shape_ != null) {
        if (shape_ == null) {
          Shape = new global::TrafficSimulatorMsgs.Polyline();
        }
        Shape.MergeFrom(other.Shape);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            InitialDistanceOffset = input.ReadDouble();
            break;
          }
          case 16: {
            DynamicConstraintsIgnorable = input.ReadBool();
            break;
          }
          case 25: {
            BaseTime = input.ReadDouble();
            break;
          }
          case 32: {
            Closed = input.ReadBool();
            break;
          }
          case 42: {
            if (shape_ == null) {
              Shape = new global::TrafficSimulatorMsgs.Polyline();
            }
            input.ReadMessage(Shape);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
